<%- include("../partials/user/header") %>
<link rel="stylesheet" href="/styles/userprofile_style.css" />

<link
  href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css"
  rel="stylesheet"
/>

<style>
  .sidebar {
    background-color: white;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  .sidebar a {
    color: #333;
    display: block;
    padding: 10px 0;
    text-decoration: none;
  }
  .sidebar a.active {
    color: #ff6600;
  }
  .sidebar a:hover {
    color: #ff6600;
  }
  .sidebar a i {
    margin-right: 10px;
  }
  .main-content {
    background-color: white;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  .main-content h2 {
    margin-bottom: 20px;
  }
  .form-group label {
    font-weight: bold;
  }
  .form-group span {
    color: red;
  }
  .btn-orange {
    background-color: #ff6600;
    color: white;
  }
  .btn-orange:hover {
    background-color: #e65c00;
  }
  .btn-blue {
    background-color: #0000ff;
    color: white;
  }
  .btn-blue:hover {
    background-color: #0000cc;
  }
  .photo img {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: 10px;
  }

  #coupons-title {
    color: #1e3a8a;
    font-size: 1.125rem;
    font-weight: bold;
    margin-bottom: 16px;
  }
  .coupon {
    background-color: #d1fae5;
    padding: 24px;
    border-radius: 8px;
    margin-bottom: 16px;
  }
  .coupon h2 {
    font-size: 1.125rem;
    font-weight: bold;
    margin: 0;
    display: flex;
    align-items: center;
  }
  .coupon h2 span {
    margin-right: 8px;
  }
  .coupon p {
    color: #4b5563;
    margin: 8px 0 16px;
  }
  .coupon .input-group {
    display: flex;
  }
  .coupon input {
    border: 1px solid #d1d5db;
    border-radius: 4px 0 0 4px;
    padding: 8px;
    flex-grow: 1;
    outline: none;
  }
  .coupon button {
    background-color: #1f2937;
    color: white;
    border: none;
    border-radius: 0 4px 4px 0;
    padding: 8px 16px;
    cursor: pointer;
  }

  .unique-container {
    max-width: 1024px;
    margin: 0 auto;
    background-color: #ffffff;
    padding: 24px;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  .unique-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 16px;
  }
  .unique-balance-card {
    padding: 16px;
    border-radius: 8px;
    text-align: center;
    color: #ffffff;
  }
  .available {
    padding: 50px;
    border-radius: 18px;
    text-align: center;
    color: #ffffff;
  }
  .unique-balance-card.available {
    background-color: #4a5568;
  }
  .unique-balance-card.reward {
    background-color: #48bb78;
  }
  .unique-balance-card.pending {
    background-color: #f56565;
  }
  .unique-balance-card p {
    margin: 0;
  }
  .unique-balance-card .amount {
    font-size: 2rem;
    font-weight: 700;
  }
  .wallet-action-button {
    display: inline-block;
    padding: 12px 24px;
    background-color: #4a5568;
    color: white;
    text-decoration: none;
    border-radius: 8px;
    transition: all 0.3s ease;
    margin-right: 10px;
    cursor: pointer;
  }
  .wallet-action-button:hover {
    background-color: #2d3748;
    color: white;
    transform: translateY(-2px);
  }
  .quick-amount {
    display: inline-block;
    padding: 10px 20px;
    margin: 5px;
    border: 2px solid #4a5568;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  .quick-amount:hover {
    background: #4a5568;
    color: white;
  }
  .transaction-status {
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.875rem;
  }
  .status-credit {
    background-color: #48bb78;
    color: white;
  }
  .status-debit {
    background-color: #f56565;
    color: white;
  }
	.pagination {
		margin-top: 20px;
		justify-content: center;
		align-items: center;
	}

	.pagination a {
		padding: 10px;
		margin: 4px;
		text-decoration: none;
		background-color: white;
		color: black;
		font-weight: bold;
		border-radius: 50%;
		align-items: center;
	}

	.pagination a i {
		padding: 4px;
	}

	.pagination a.active {
		background-color: #DAADCC;
		font-weight: bold;
	}

</style>

<!-- <div class="page-header breadcrumb-wrap">
  <div class="container">
    <div class="breadcrumb">
      <a href="/home" rel="nofollow" class="no-style">Home &nbsp; > &nbsp;</a>
      <a href="/profile" rel="nofollow" class="no-style"
        >Profile&nbsp; > &nbsp;</a
      >
      <a href="/" <a href="/editProfile" rel="nofollow" class="no-style"
        >Add &nbsp; > &nbsp;</a
      >
    </div>
  </div>
</div> -->

<div class="container-fluid">
  <div class="row">
    <%- include('../../views/partials/user/sidebar',{user:user}) %>
    <!-- Main Content -->
    <div class="col-md-10 main-content"  style="padding-top: 200px;">
      <div class="unique-container">
        <h2 class="unique-title">Wallet & Transactions</h2>
        <div class="row mb-4">
          <div class="col-md-4 mb-3">
            <div id="add-money-button" class="unique-balance-card available">
              <p class="amount">
                ₹
                <% if(wallet.balance){%>
                <span id="availableBalance"
                  ><%= wallet.balance.toFixed(2) %></span>
                 <%} else {%> 
                    <span id="availableBalance"> 0 </span>
                <%}%>
              </p>
              <p>Available Balance</p>
            </div>
          </div>
        </div>
        <div class="unique-button-group mb-4">
          <button
            class="wallet-action-button"
            data-bs-toggle="modal"
            data-bs-target="#addMoneyModal"
          >
            <i class="fas fa-plus-square"></i> Add Balance
          </button>
          <button
            class="wallet-action-button"
            data-bs-toggle="modal"
            data-bs-target="#withdrawModal"
          >
            <i class="fas fa-minus-square"></i> Withdraw
          </button>
        </div>
        <div class="unique-transaction-history">
          <h3>Transaction History</h3>
          <table class="table unique-transaction-table">
            <thead>
              <tr>
                <th>Amount</th>
                <th>Purpose</th>
                <th>Date</th>
                <th>Type</th>
              </tr>
            </thead>
            <tbody>
                <% if (transactions && transactions.length > 0) { %> 
                <%transactions.forEach((transaction)=>{%>
            
              
              <tr>
                <td>₹<%= transaction?.amount.toFixed(2) %></td>
                <td><%= transaction.description %></td>
                <td>
                  <%= new Date(transaction.date).toLocaleDateString() %>
                </td>
                <td>
                  <span
                    class="transaction-status <%= transaction.type === 'credit' ? 'status-credit' : 'status-debit' %>"
                  >
                    <%= transaction.type.charAt(0).toUpperCase() +
                    transaction.type.slice(1) %>
                  </span>
                </td>
              </tr>
              <%})%> <% } else { %>
              <tr>
                <td colspan="4" class="text-center">No transactions found</td>
              </tr>
              <% } %>
            </tbody>            
          </table>
          				 <!-- Pagination -->
				 <div class="pagination-container">
					<div class="pagination">
						<% if (currentPage> 1) { %>
							<a href="?page=<%= currentPage - 1 %>">
								<i class="fa-solid fa-backward"></i>
							</a>
						<% } %>

						<% for (let i=1; i <=totalPages; i++) { %>
							<a href="?page=<%= i %>"
									class="<%= currentPage === i ? 'active' : '' %>">
								<%= i %>
							</a>
						<% } %>

						<% if (currentPage < totalPages) { %>
								<a href="?page=<%= currentPage + 1 %>">
									<i class="fa-solid fa-forward"></i>
								</a>
						<% } %>
					</div>
				</div>
				<!-- pagination ends -->
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add Money Modal -->
<div class="modal fade" id="addMoneyModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Add Money to Wallet</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
        ></button>
      </div>
      <div class="modal-body">
        <div class="mb-4">
          <input
            type="number"
            id="amount"
            class="form-control form-control-lg text-center"
            placeholder="Enter Amount (₹)"
            min="1"
            step="1"
          />
        </div>
        <div class="text-center mb-4">
          <div class="quick-amount" onclick="setAmount(1000)">₹1000</div>
          <div class="quick-amount" onclick="setAmount(50000)">₹50000</div>
          <div class="quick-amount" onclick="setAmount(100000)">₹100000</div>
          <div class="quick-amount" onclick="setAmount(200000)">₹200000</div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Close
        </button>
        <button type="button" class="btn btn-primary" id="payButton" onclick="addMoney()">
          Proceed to Pay
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Withdraw Money Modal -->
<div class="modal fade" id="withdrawModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Withdraw Money</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
        ></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="withdrawAmount" class="form-label"
            >Enter Amount to Withdraw</label
          >
          <input
            type="number"
            id="withdrawAmount"
            class="form-control"
            min="1"
            step="1"
          />
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Close
        </button>
        <button type="button" class="btn btn-primary" id="withdrawButton">
          Withdraw
        </button>
      </div>
    </div>
  </div>
</div>
<!-- 
<style>
    .pagination .page-link {
        font-size: 14px; /* Reduce font size */
        padding: 6px 12px; /* Adjust padding */
        min-width: 80px; /* Ensure consistent width */
        text-align: center; /* Align text properly */
    }
</style> -->




<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  function setAmount(amount) {
    document.getElementById("amount").value = amount;
  }

  async function addMoney() {
    const amount = document.getElementById("amount").value;
    if (!amount || amount <= 0) {
      alert("Please enter a valid amount.");
      return;
    }

    // Create Order from Backend
    const response = await fetch("/wallet/createOrder", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ amount }),
    });

    const order = await response.json();

    const options = {
      key: "<%= process.env.RAZORPAY_KEY_ID %>",
      amount: order.amount,
      currency: "INR",
      name: "TinyBeats Wallet",
      description: "Wallet Top-Up",
      order_id: order.id,
      handler: async function (response) {
        const verifyRes = await fetch("/wallet/verifyPayment", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            razorpay_order_id: response.razorpay_order_id,
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_signature: response.razorpay_signature,
            amount: amount,
          }),
        });

        const result = await verifyRes.json();
        if (result.success) {
          Swal.fire({
            title: "Success!",
            text: "Wallet Recharged Successfully!",
            icon: "success",
            confirmButtonText: "OK",
          }).then(() => {
            location.reload(); 
          });
        } else {
          Swal.fire({
            title: "Error!",
            text: "Payment Verification Failed",
            icon: "error",
            confirmButtonText: "Try Again",
          });
        }
      },
      prefill: {
        email: "<%= user.email %>",
        contact: "<%= user.phone %>",
      },
      theme: { color: "#3399cc" },
    };

    const paymentObject = new Razorpay(options);
    paymentObject.open();
  }

  document
    .getElementById("withdrawButton")
    .addEventListener("click", async () => {
      const amount = document.getElementById("withdrawAmount").value;

      if (!amount || amount < 1) {
        alert("Please enter a valid amount");
        return;
      }

      try {
        const response = await fetch("/wallet/withdrawMoney", {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ amount }),
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire({
            title: "Success!",
            text: "Money withdrawn successfully!",
            icon: "success",
            confirmButtonText: "OK",
          }).then((result) => {
            if (result.isConfirmed) {
              window.location.reload();
            }
          });
        } else {
          Swal.fire({
            title: "Error!",
            text: data.message || "Failed to withdraw money. Please try again.",
            icon: "error",
            confirmButtonText: "OK",
          });
        }
      } catch (error) {
        console.error("Error:", error);
        alert("Failed to withdraw money. Please try again.");
      }
    });
</script>

<%- include("../partials/user/footer") %>
<%- include('../partials/admin/header') %>
<style>
  .quantity-container {
    display: flex;
    align-items: center;
    gap: 10px;
    flex-direction: row;
  }
  .quantity-wrapper {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    min-width: 200px;
  }
  .quantity-input {
    width: 80px;
    padding: 5px;
    text-align: center;
    border: 1px solid #ccc;
    border-radius: 5px;
  }
  .error-message {
    color: red;
    font-size: 12px;
    margin-top: 2px;
    display: none;
    min-height: 16px;
  }
  th:nth-child(5),
  td:nth-child(5) {
    width: 250px;
  }
  
  .search-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
    width: 100%;
  }
  .pagination {
            margin-top: 20px;
            justify-content: center;
            align-items: center;
        }

        .pagination a {
            padding: 10px;
            margin: 4px;
            text-decoration: none;
            background-color: white;
            color: black;
            font-weight: bold;
            border-radius: 50%;
            align-items: center;
        }

        .pagination a i {
            padding: 4px;
        }

        .pagination a.active {
            background-color: #DAADCC;
            font-weight: bold;
        }
  
  
  @media (min-width: 768px) {
    .search-container {
      flex-direction: row;
      justify-content: center;
    }
  }
  
  .search-form {
    width: 100%;
    max-width: 400px;
  }
  
  .search-actions {
    display: flex;
    gap: 0.5rem;
  }
  
  .table-responsive {
    overflow-x: auto;
  }
  
  @media (max-width: 767px) {
    .quantity-wrapper {
      min-width: auto;
    }
    
    th:nth-child(5),
    td:nth-child(5) {
      width: auto;
    }
    
    .product-img {
      height: 60px !important;
      width: 60px !important;
    }
  }
</style>

    <section>
        
      <div class="container-fluid mt-4">
        <div class="card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h2>Category List</h2>
            
                <!-- Add Category Button to Open Modal -->
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal"
                    style="width: auto; background-color: #946B88;border: none;">
                    Add Category
                </button>

            </div>
            <div class="search-container m">
            <form class="d-flex mt-5 justify-content-end" method="GET" action="/admin/category">
                <input class="form-control me-2" type="search" name="search" placeholder="Search by category name" style="width: 300px;"
                    value="<%= search %>" value="<%= typeof searched !== 'undefined' ? searched : '' %>" aria-label="Search">
            
                <button class="btn btn-outline-success me-2" type="submit">Search</button>
            
                <% if (search && search.trim() !== "") { %>
                    <a href="/admin/category" class="btn btn-outline-danger">Clear</a>
                <% } %>
            </form>
            </div>
            <div class="card-body">
              <div class="table-responsive">
            <table class="table  table-hover text-center mt-5" style="border-color: #946B88; font-size: 12px;">
                <thead style="background-color:#DAADCC; color: white;">
                    <tr>
                        <th scope="col" class="text-center">#</th>
                        <th scope="col" class="text-center">Name</th>
                        <th scope="col" class="text-center">Description</th>
                        <th scope="col" class="text-center">Offer</th>
                        <th scope="col" class="text-center">Offer Action</th>
                        <th scope="col" class="text-center">Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% categories.forEach(category=> { %>
                        <tr>
                            <td >
                                <%= serialNumber++ %>
                            </td>
                            <td>
                                <%= category.name %>
                            </td>
                            <td style="max-width: 200px; font-size: 12px;" >
                                <%= category.description %>
                            </td>
                            <td>
                              <%  if(category.offer > 0){ %>
                               <span class=" text-success"> <%= category.offer %>%</span>
                               <% } else { %> 
                                <span> 0% </span>
                               <% } %> 
                            </td>
                            <td>
                                    <% if(category.offer === 0) {%>
                                    <button class="btn btn-outline-success" onclick="addOffer('<%= category._id %>')"
                                        style="width:70px;padding:5px;font-size: 12px;font-weight: bold;color:#048504">
                                        Add
                                    </button>
                                    <% } else { %>
                                        <button class="btn btn-outline-danger"
                                            onclick="removeOffer('<%=category._id %>')"
                                            style="width:70px;padding:5px;font-size: 12px;font-weight: bold;color:#db0001;">
                                            Remove
                                        </button>
                                    <% } %>  
                            </button>
                            </td>
                            <td>
                                <button class="btn btn-warning" data-bs-toggle="modal"
                                style="width:80px; padding:5px; font-size: 12px; font-weight: bold;color:white;margin-bottom: 5px; "
                                    data-bs-target="#editCategoryModal<%= category._id %>">
                                    Edit
                                </button>

                                <button class="btn btn-danger mx-auto" 
                                style="width:80px; padding:5px; font-size: 12px; font-weight: bold;color:white; "
                                onclick="confirmDeleteCategory('<%= category._id %>')">
                                Delete
                                 </button>
                            


                            </td>

                        </tr>

                     

                        <!-- Bootstrap Modal for Editing Category -->
                        <div class="modal fade" id="editCategoryModal<%= category._id %>" tabindex="-1"
                            aria-labelledby="editCategoryLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Edit Category</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form class="edit-category-form" data-id="<%= category._id %>">
                                            <div class="mb-3">
                                                <label for="categoryName<%= category._id %>" class="form-label">Category
                                                    Name</label>
                                                <input type="text" class="form-control"
                                                    id="categoryName<%= category._id %>" name="name"
                                                    value="<%= category.name %>" required>
                                            </div>
                                            <div class="mb-3">
                                                <label for="categoryDescription<%= category._id %>"
                                                    class="form-label">Category Description</label>
                                                <textarea class="form-control""
                                                    id="categoryDescription<%= category._id %>" name="description"
                                                    required><%= category.description %></textarea>
                                            </div>
                                            
                                            <button type="submit" class="btn btn-primary">Update Category</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <% }); %>
                </tbody>
            </table>
            </div>
            </div>
             <!-- Pagination -->
         <%
         let startPage = Math.max(1, currentPage-1)
         let endPage = Math.min(totalPages,startPage+2)
         if(endPage - startPage < 2){
            startPage = Math.max(1,endPage-2)
         }
         %>
        <div class="pagination">
            <% if (currentPage> 1) { %>
                <a href="/admin/order?page=<%= currentPage - 1 %>">
                    <i class="fa-solid fa-backward"></i>
                </a>
                <% } %>

                    <% for (let i=startPage; i <=endPage; i++) { %>
                        <a href="/admin/order?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>">
                            <%= i %>
                        </a>
                        <% } %>

                            <% if (currentPage < totalPages) { %>
                                <a href="/admin/order?page=<%= currentPage + 1 %>">
                                    <i class="fa-solid fa-forward"></i>
                                </a>
                                <% } %>
        </div>
    </div>


        <!-- Bootstrap Modal for Adding Category -->
        <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addCategoryLabel">Add Category</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addCategoryForm">
                            <div class="mb-3">
                                <label for="categoryName" class="form-label">Category Name</label>
                                <input type="text" class="form-control" id="categoryName" name="name" required>
                            </div>
                            <div class="mb-3">
                                <label for="categoryDescription" class="form-label">Category Description</label>
                                <textarea class="form-control" id="categoryDescription" name="description" 
                                    required></textarea>
                            </div>
                                                     
                            <button type="submit" class="btn btn-primary">Add Category</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
      </div>

       

    </section>

    <style>
        .pagination {
            margin-top: 20px;
            justify-content: center;
            align-items: center;
        }

        .pagination a {
            padding: 10px;
            margin: 4px;
            text-decoration: none;
            background-color: white;
            color: black;
            font-weight: bold;
            border-radius: 50%;
            align-items: center;
        }

        .pagination a i {
            padding: 4px;
        }

        .pagination a.active {
            background-color: #DAADCC;
            font-weight: bold;
        }
    </style>
    <script>
         const existingCategories = <%- JSON.stringify(categories.map(cat => cat.name)) %>;
         document.getElementById("addCategoryForm").addEventListener("submit", function (event) {
            event.preventDefault(); 
            
            const nameInput = document.getElementById("categoryName").value.trim();
            const descriptionInput = document.getElementById("categoryDescription").value.trim();
            if (existingCategories.some(cat => cat.toLowerCase() === nameInput.toLowerCase())) {
            Swal.fire("Error", "Category name already exists!", "error");
            return;
            }

            const formData = new FormData(this);
            fetch("/admin/category/add", {
                method: "POST",
                body: new URLSearchParams(formData), 
                headers: { "Content-Type": "application/x-www-form-urlencoded" }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon:"success",
                            title:"Success",
                            text:"Category added successfully!",
                            timer:1500,
                        }).then(()=>{
                            location.reload(); 
                        })
                        
                    } else {
                       Swal.fire("error" ,data.message,"Error");
                    }
                })
                .catch(error => {
                        console.error("Error adding category:", error);
                        Swal.fire("error" ,"Error while adding category","Error");
                    });
        });
  
        document.querySelectorAll(".edit-category-form").forEach(form => {
            form.addEventListener("submit", function (event) {
                event.preventDefault(); // Prevent default form submission

                const categoryId = this.getAttribute("data-id"); // Get category ID
                const formData = new FormData(this);

                fetch(`/admin/category/edit/${categoryId}`, {
                    method: "POST",
                    body: new URLSearchParams(formData),
                    headers: { "Content-Type": "application/x-www-form-urlencoded" }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                            icon:"success",
                            title:"Success",
                            text:"Category updated successfully!",
                            timer:1500,
                        }).then(()=>{
                            location.reload(); 
                        })
                        } else {
                            Swal.fire("error" ,data.message,"Error");
                        }
                    })
                    .catch(error => {
                        console.error("Error updating category:", error);
                        Swal.fire("error" ,"Error while updating category","Error");
                    });
            });
        });

    </script>
    <!-- Soft Deletion Message -->
    <script>
  function confirmDeleteCategory(categoryId) {
    Swal.fire({
      title: 'Are you sure?',
      text: 'This action will delete the category!',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#aaa',
      confirmButtonText: 'Yes, delete it!',
    }).then((result) => {
      if (result.isConfirmed) {
        // Redirect to the delete route
        window.location.href = `/admin/category/delete/${categoryId}`;
      }
    });
  }




    async function addOffer(categoryId) {
      const { value: percentage } = await Swal.fire({
        title: "Add Offer Percentage",
        input: "number",
        inputLabel: "Percentage",
        inputPlaceholder: "Enter percentage (e.g., 10 for 10%)",
        inputAttributes: {
          min: 1,
          max: 99,
        },
        showCancelButton: true,
        confirmButtonText: "Add Offer",
        cancelButtonText: "Cancel",
        inputValidator: (value) => {
          if (!value || value < 1 || value > 99) {
            return "Please enter a valid percentage between 1 and 100";
          }
        },
      });
      console.log("Sending Data:", { percentage, categoryId });

      if (percentage) {
        try {
          const response = await fetch("/admin/addCategoryOffer", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              percentage: percentage,
              categoryId: categoryId,
            }),
          });

          const data = await response.json();

          if (response.ok && data.status === true) {
            Swal.fire(
              "Offer Added",
              `The offer of ${percentage}% has been added successfully.`,
              "success"
            ).then(() => {
              location.reload();
            });
          } else {
            Swal.fire(
              "Failed",
              data.message || "Failed to add the offer.",
              "error"
            );
          }
        } catch (error) {
          Swal.fire(
            "Error",
            "An error occurred while adding the offer.",
            "error"
          );
          console.error("Error adding offer:", error);
        }
      }
    }


    async function removeOffer(categoryId) {
      try {
        const response = await fetch("/admin/removeCategoryOffer", {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            categoryId: categoryId,
          }),
        });

        const data = await response.json();

        if (response.ok && data.status === true) {
          Swal.fire(
            "Offer Removed",
            "The offer has been removed successfully.",
            "success"
          ).then(() => {
            location.reload();
          });
        } else {
          Swal.fire(
            "Failed",
            data.message || "Failed to remove the offer.",
            "error"
          );
        }
      } catch (error) {
        Swal.fire(
          "Error",
          "An error occurred while removing the offer.",
          "error"
        );
        console.error("Error removing offer:", error);
      }
    }
    </script>
    <%- include('../partials/admin/footer') %>
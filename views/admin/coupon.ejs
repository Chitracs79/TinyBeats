<%- include('../partials/admin/header') %>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <style>
    .error-message {
      color: red;
      margin-top: 5px;
      font-size: 0.875rem;
      display: block;
    }

    .editError-message {
      color: red;
      margin-top: 5px;
      font-size: 0.875rem;
      display: block;
    }
      .pagination {
            margin-top: 20px;
            justify-content: center;
            align-items: center;
        }

        .pagination a {
            padding: 10px;
            margin: 4px;
            text-decoration: none;
            background-color: white;
            color: black;
            font-weight: bold;
            border-radius: 50%;
            align-items: center;
        }

        .pagination a i {
            padding: 4px;
        }

        .pagination a.active {
            background-color: #DAADCC;
            font-weight: bold;
        }  
    
  </style>

  <section>
    <div class="container-fluid mt-4">
      <div class="card">

        <div class="card-header d-flex justify-content-between align-items-center">
          <h2>Coupon List</h2>

          <!-- Add Coupon Button to Open Modal -->
          <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCouponModal"
            style="width: auto; background-color: #946B88;border: none;">
            Add Coupon
          </button>

        </div>


        <div class="card-body">
          <div class="table-responsive">
            <table class="table  table-hover text-center mt-5" style="font-size: 14px;">
              <thead style="background-color:#DAADCC; color: white;">
                <tr>
                  <th scope="col" class="text-center">#</th>
                  <th scope="col" class="text-center">Name</th>
                  <th scope="col" class="text-center">Start Date</th>
                  <th scope="col" class="text-center">End Date</th>
                  <th scope="col" class="text-center">Offer</th>
                  <th scope="col" class="text-center">MinimumPrice</th>
                  <th scope="col" class="text-center">Status</th>
                  <th scope="col" class="text-center">Actions</th>
                </tr>
              </thead>
              <tbody>
                <% coupons.forEach(coupon=> { %>
                  <tr>
                    <td>
                      <%= serialNumber++ %>
                    </td>
                    <td>
                      <%= coupon.name %>
                    </td>
                    <td>
                      <%= coupon.createdOn.toLocaleDateString("en-GB", { day: "2-digit" , month: "long" ,
                        year: "numeric" }) %>
                    </td>
                    <td>
                      <%= coupon.expireOn.toLocaleDateString("en-GB", { day: "2-digit" , month: "long" , year: "numeric"
                        }) %>
                    </td>
                    <td >
                      <% if (coupon.discountPercentage > 0) { %>
                        <%= coupon.discountPercentage %>%
                      <% } else { %>
                        â‚¹<%= coupon.offerPrice %>
                      <% } %>
                    </td>
                    <td>
                      <%= coupon.minimumPrice %>
                    </td>
                    <td>
                      <% if (new Date(coupon.createdOn) < Date.now() && new Date(coupon.expireOn)> Date.now()) { %>
                        <span class="badge bg-success text-white"
                          style="font-size: 12px; font-weight: bold;">Active</span>
                        <% } else { %>
                          <span class="badge bg-danger text-white"
                            style="font-size: 12px; font-weight: bold;">Inactive</span>
                          <% } %>
                    </td>
                    <td>
                      <button class="btn btn-warning" data-bs-toggle="modal"
                        style="width:80px; padding:5px; font-size: 12px; font-weight: bold;color:white;margin-bottom: 5px; "
                        data-bs-target="#editCouponModal<%= coupon._id %>">
                        Edit
                      </button>
                      <button class="btn btn-danger mx-auto "
                        style="width:80px; padding:5px; font-size: 12px; font-weight: bold; "
                        onclick="confirmDelete('<%= coupon._id %>')">
                        Delete
                      </button>


                    </td>

                  </tr>


                  <!-- Bootstrap Modal for Editing Coupon -->
                
                    <div
                      class="modal fade"
                      id="editCouponModal<%= coupon._id %>"
                      tabindex="-1"
                      aria-labelledby="editCouponLabel"
                      aria-hidden="true"
                    >
                      <div class="modal-dialog">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h5 class="modal-title">Edit Coupon</h5>
                            <button
                              type="button"
                              class="btn-close"
                              data-bs-dismiss="modal"
                              aria-label="Close"
                            ></button>
                          </div>
                          <div class="modal-body">
                            <form class="edit-Coupon-form" data-id="<%= coupon._id %>">
                              <div class="mb-3">
                                <label for="couponName" class="form-label"
                                  >Coupon Name</label
                                >
                                <input
                                  type="text"
                                  class="form-control"
                                  id="couponName"
                                  name="name"
                                  value="<%= coupon.name%>"
                                />
                                <div id="couponNameError" class="editError-message"></div>
                              </div>
                              <div class="mb-3">
                                <label for="couponCreateOn" class="form-label"
                                  >Created On</label
                                >
                                <input
                                  type="date"
                                  class="form-control"
                                  id="startDate"
                                  name="createdOn"
                                  value="<%= new Date(coupon.createdOn).toLocaleDateString('en-CA') %>"
                                />
                                <div id="startDateError" class="editError-message"></div>
                              </div>
                  
                              <div class="mb-3">
                                <label for="couponExpireOn" class="form-label"
                                  >Expire On</label
                                >
                                <input
                                  type="date"
                                  class="form-control"
                                  id="couponExpireOn"
                                  name="expireOn"
                                  value="<%= new Date(coupon.expireOn).toLocaleDateString('en-CA') %>"
                                />
                                <div id="expireDateError" class="editError-message"></div>
                              </div>
                  
                              <div class="mb-3">
                                <label for="OfferPrice" class="form-label"
                                  >Offer Price</label
                                >
                                <input
                                  type="text"
                                  class="form-control"
                                  id="offerPrice"
                                  name="offerPrice"
                                  value="<%= coupon.offerPrice%>"
                                />
                                <div id="offerPriceError" class="editError-message"></div>
                              </div><div class="mb-3">
                                <label for="discountPercentage" class="form-label">Discount Percentage</label>
                                <input
                                  type="text"
                                  class="form-control"
                                  id="discountPercentage"
                                  name="discountPercentage"
                                  value="<%= coupon.discountPercentage || '' %>"
                                />
                                <div id="discountPercentageError" class="editError-message"></div>
                              </div>
                              
                              <div class="mb-3">
                                <label for="maxDiscountAmount" class="form-label">Max Discount Amount</label>
                                <input
                                  type="text"
                                  class="form-control"
                                  id="maxDiscountAmount"
                                  name="maxDiscountAmount"
                                  value="<%= coupon.maxDiscountAmount || '' %>"
                                />
                                <div id="maxDiscountAmountError" class="editError-message"></div>
                              </div>
                              
                              <div class="mb-3">
                                <label for="MinimumPrice" class="form-label"
                                  >Minimum Price</label
                                >
                                <input
                                  type="text"
                                  class="form-control"
                                  id="minimumPrice"
                                  name="minimumPrice"
                                  value="<%= coupon.minimumPrice%>"
                                />
                                <div id="minimumPriceError" class="editError-message"></div>
                              </div>
                  
                              <button type="submit" class="btn btn-primary">
                                Update Coupon
                              </button>
                            </form>
                          </div>
                        </div>
                      </div>
                    </div>
                 

                  <% }); %>
              </tbody>
            </table>
             <!-- Pagination -->
     <div class="pagination">
      <% if (currentPage> 1) { %>
          <a href="?page=<%= currentPage - 1 %>">
              <i class="fa-solid fa-backward"></i>
          </a>
          <% } %>

              <% for (let i=1; i <=totalPages; i++) { %>
                  <a href="?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>">
                      <%= i %>
                  </a>
                  <% } %>

                      <% if (currentPage < totalPages) { %>
                          <a href="?page=<%= currentPage + 1 %>">
                              <i class="fa-solid fa-forward"></i>
                          </a>
                          <% } %>
  </div>


            
          </div>
        </div>
       

      </div>
    </div>

    <!-- Bootstrap Modal for Adding Coupon -->
    <div
  class="modal fade"
  id="addCouponModal"
  tabindex="-1"
  aria-labelledby="addCouponModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addCouponModalLabel">Add Coupon</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <form id="addCouponForm">
          <body onload="setDefaultStartDate()"></body>

          <div class="mb-4">
            <label for="coupon-name" class="form-label">Coupon Name</label>
            <input
              type="text"
              id="coupon-name"
              name="couponName"
              placeholder="Type here"
              class="form-control"
            />
            <div id="error-coupon-name" class="error-message"></div>
          </div>

          <div class="mb-4">
            <label for="startingDate" class="form-label">Start Date</label>
            <input
              type="date"
              name="startDate"
              class="form-control"
              required
              id="startingDate"
            />
            <div id="error-start-date" class="error-message"></div>
          </div>

          <div class="mb-4">
            <label for="expiringDate" class="form-label">End Date</label>
            <input
              type="date"
              name="endDate"
              class="form-control"
              id="expiringDate"
            />
            <div id="error-end-date" class="error-message"></div>
          </div>

          <div class="mb-4">
            <label for="offer-price" class="form-label">Offer Price</label>
            <input
              type="text"
              name="offerPrice"
              placeholder="Type here"
              class="form-control"
            />
            <div id="error-offer-price" class="error-message"></div>
          </div>

          <div class="mb-4">
            <label for="discount-percentage" class="form-label">Discount Percentage</label>
            <input
              type="number"
              name="discountPercentage"
              placeholder="Enter percentage"
              class="form-control"
            />
            <div id="error-discount-percentage" class="error-message"></div>
          </div>

          <div class="mb-4">
            <label for="max-discount-amount" class="form-label">Max Discount Amount</label>
            <input
              type="text"
              name="maxDiscountAmount"
              placeholder="Type here"
              class="form-control"
            />
            <div id="error-max-discount-amount" class="error-message"></div>
          </div>

          <div class="mb-4">
            <label for="minimum-price" class="form-label">Minimum Price</label>
            <input
              type="text"
              name="minimumPrice"
              placeholder="Type here"
              class="form-control"
            />
            <div id="error-minimum-price" class="error-message"></div>
          </div>

          <div class="d-grid">
            <button class="btn btn-primary" type="submit">Add Coupon</button>
          </div>
          <div id="err-msg" class="error-message"></div>
        </form>
      </div>
    </div>
  </div>
</div>
     
  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <script>
    // Set default start date when page loads
    function setDefaultStartDate() {
      const today = new Date();
      const year = today.getFullYear();
      const month = (today.getMonth() + 1).toString().padStart(2, "0");
      const day = today.getDate().toString().padStart(2, "0");
      document.getElementById("startingDate").value = `${year}-${month}-${day}`;
      document.getElementById("startingDate").min = `${year}-${month}-${day}`;
    }

   // Validate add coupon form
function validateAddCouponForm() {
  // Clear previous errors
  document.querySelectorAll("#addCouponForm .error-message").forEach(element => {
    element.textContent = "";
  });

  // Get form elements
  const form = document.getElementById("addCouponForm");
  const couponName = form.elements["couponName"].value.trim();
  const startDate = form.elements["startDate"].value;
  const endDate = form.elements["endDate"].value;
  const offerPrice = form.elements["offerPrice"].value.trim();
  const discountPercentage = form.elements["discountPercentage"].value.trim();
  const maxDiscountAmount = form.elements["maxDiscountAmount"].value.trim();
  const minimumPrice = form.elements["minimumPrice"].value.trim();

  let isValid = true;

  // Name validation
  if (!couponName) {
    document.getElementById("error-coupon-name").textContent = "Coupon name is required";
    isValid = false;
  } else if (!/^[A-Za-z0-9 ]{3,50}$/.test(couponName)) {
    document.getElementById("error-coupon-name").textContent = "Coupon Name should be alphanumeric (3-50 characters)";
    isValid = false;
  }

  // Date validation
  const today = new Date();
  today.setHours(0, 0, 0, 0);
  const startDateObj = new Date(startDate);
  const endDateObj = new Date(endDate);

  if (!startDate) {
    document.getElementById("error-start-date").textContent = "Start date is required";
    isValid = false;
  } else if (startDateObj < today) {
    document.getElementById("error-start-date").textContent = "Start date should be today or later";
    isValid = false;
  }

  if (!endDate) {
    document.getElementById("error-end-date").textContent = "End date is required";
    isValid = false;
  } else if (endDateObj <= startDateObj) {
    document.getElementById("error-end-date").textContent = "End date should be after start date";
    isValid = false;
  }

  // Offer validation
  const hasOfferPrice = !!offerPrice;
  const hasDiscount = !!discountPercentage;
  const hasMaxAmount = !!maxDiscountAmount;

  const offerPriceNum = parseFloat(offerPrice);
  const discountPercentageNum = parseFloat(discountPercentage);
  const maxDiscountAmountNum = parseFloat(maxDiscountAmount);
  const minimumPriceNum = parseFloat(minimumPrice);

  if (!hasOfferPrice && !hasDiscount) {
    document.getElementById("error-offer-price").textContent = "Enter either Offer Price or Discount Percentage";
    document.getElementById("error-discount-percentage").textContent = "Enter either Offer Price or Discount Percentage";
    isValid = false;
  }

  if (hasOfferPrice && hasDiscount) {
    document.getElementById("error-offer-price").textContent = "Only one of Offer Price or Discount Percentage allowed";
    document.getElementById("error-discount-percentage").textContent = "Only one of Offer Price or Discount Percentage allowed";
    isValid = false;
  }

  if (hasDiscount && !hasMaxAmount) {
    document.getElementById("error-max-discount-amount").textContent = "Maximum discount amount required for percentage offers";
    isValid = false;
  }

  if (hasOfferPrice && (hasDiscount || hasMaxAmount)) {
    if (hasDiscount) {
      document.getElementById("error-discount-percentage").textContent = "Leave Discount Percentage empty if using Offer Price";
    }
    if (hasMaxAmount) {
      document.getElementById("error-max-discount-amount").textContent = "Leave Maximum Amount empty if using Offer Price";
    }
    isValid = false;
  }


  if (hasOfferPrice && (!offerPriceNum || offerPriceNum <= 0)) {
    document.getElementById("error-offer-price").textContent = "Offer price must be a positive number";
    isValid = false;
  }

  if (hasDiscount && (!discountPercentageNum || discountPercentageNum < 1 || discountPercentageNum > 99)) {
    document.getElementById("error-discount-percentage").textContent = "Discount percentage must be between 1 and 99";
    isValid = false;
  }

  if (hasMaxAmount && (!maxDiscountAmountNum || maxDiscountAmountNum <= 0)) {
    document.getElementById("error-max-discount-amount").textContent = "Maximum discount must be a positive number";
    isValid = false;
  }

  // Minimum price
  if (!minimumPrice || isNaN(minimumPriceNum)) {
    document.getElementById("error-minimum-price").textContent = "Valid minimum price is required";
    isValid = false;
  } else if (minimumPriceNum <= 0) {
    document.getElementById("error-minimum-price").textContent = "Minimum price must be positive";
    isValid = false;
  } else {
    if (hasMaxAmount && minimumPriceNum < maxDiscountAmountNum) {
      document.getElementById("error-minimum-price").textContent = "Minimum price cannot be less than max discount amount";
      isValid = false;
    }
    if (hasOfferPrice && minimumPriceNum < offerPriceNum) {
      document.getElementById("error-minimum-price").textContent = "Minimum price cannot be less than offer price";
      isValid = false;
    }
  }

  return isValid;
}

    // Add coupon form submission
    document.getElementById("addCouponForm").addEventListener("submit", function (event) {
      event.preventDefault();

      if (validateAddCouponForm()) {
        const formData = new FormData(this);
        fetch("/admin/coupon", {
          method: "POST",
          body: new URLSearchParams(formData),
          headers: { "Content-Type": "application/x-www-form-urlencoded" }
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire({
                title: "Success!",
                text: "Coupon added successfully!",
                icon: "success",
                confirmButtonText: "Okay",
                timer: 1500,
                timerProgressBar: true
              }).then(() => {
                location.reload();
              });
            } else {
              Swal.fire({
                title: "Error",
                text: data.message,
                icon: "error",
                confirmButtonText: "Ok",
                timer: 2000,
                timerProgressBar: true
              })
            }
          })
          .catch(error => {
            console.error("Error adding coupon:", error);
            document.getElementById("err-msg").textContent = "Error: Could not reach the server.";
          });
      }
    });


    function validateEditCouponForm(form) {
  document.querySelectorAll('.editError-message').forEach(element => {
    element.textContent = "";
  });

  const couponName = form.elements["name"].value.trim();
  const createdOn = form.elements["createdOn"].value;
  const expireOn = form.elements["expireOn"].value;
  const offerPrice = form.elements["offerPrice"].value;
  const discountPercentage = form.elements["discountPercentage"].value;
  const maxDiscountAmount = form.elements["maxDiscountAmount"].value;
  const minimumPrice = form.elements["minimumPrice"].value;

  const offerPriceNum = parseFloat(offerPrice);
  const discountPercentageNum = parseFloat(discountPercentage);
  const maxDiscountAmountNum = parseFloat(maxDiscountAmount);
  const minimumPriceNum = parseFloat(minimumPrice);
  const createdOnObj = new Date(createdOn);
  const expireOnObj = new Date(expireOn);

  let isValid = true;

  // Name validation
  if (!couponName) {
    document.getElementById('couponNameError').textContent = "Coupon name is required";
    isValid = false;
  } else if (!/^[A-Za-z0-9 ]{3,50}$/.test(couponName)) {
    document.getElementById('couponNameError').textContent = "Coupon Name should be alphanumeric (3-50 characters)";
    isValid = false;
  }

  // Date validation
  if (!createdOn) {
    document.getElementById('startDateError').textContent = "Created date is required";
    isValid = false;
  }

  if (!expireOn) {
    document.getElementById('expireDateError').textContent = "Expire date is required";
    isValid = false;
  } else if (expireOnObj <= createdOnObj) {
    document.getElementById('expireDateError').textContent = "Expire date should be after created date";
    isValid = false;
  }

  // Price/Discount validation
  const hasOfferPrice = !!offerPrice;
  const hasDiscount = !!discountPercentage;
  const hasMaxAmount = !!maxDiscountAmount;

  if (!hasOfferPrice && !hasDiscount) {
    document.getElementById("offerPriceError").textContent = "Either Offer Price or Discount Percentage is required";
    isValid = false;
  }

  if (hasDiscount && !hasMaxAmount) {
    document.getElementById("maxDiscountAmountError").textContent = "Max Discount Amount is required when Discount Percentage is provided";
    isValid = false;
  }



  if (hasOfferPrice && (!offerPriceNum || offerPriceNum <= 0)) {
    document.getElementById("offerPriceError").textContent = "Offer price must be a positive number";
    isValid = false;
  }

  if (hasDiscount && (!discountPercentageNum || discountPercentageNum < 1 || discountPercentageNum > 99)) {
    document.getElementById("discountPercentageError").textContent = "Discount percentage must be between 1 and 99";
    isValid = false;
  }

  if (hasMaxAmount && (!maxDiscountAmountNum || maxDiscountAmountNum <= 0)) {
    document.getElementById("maxDiscountAmountError").textContent = "Maximum discount must be a positive number";
    isValid = false;
  }

  // Minimum price validation
  if (!minimumPrice || isNaN(minimumPriceNum)) {
    document.getElementById("minimumPriceError").textContent = "Valid minimum price is required";
    isValid = false;
  } else if (minimumPriceNum <= 0) {
    document.getElementById("minimumPriceError").textContent = "Minimum price must be positive";
    isValid = false;
  } else {
    if (hasMaxAmount && minimumPriceNum < maxDiscountAmountNum) {
      document.getElementById("minimumPriceError").textContent = "Minimum price cannot be less than max discount amount";
      isValid = false;
    }
    if (hasOfferPrice && minimumPriceNum < offerPriceNum) {
      document.getElementById("minimumPriceError").textContent = "Minimum price cannot be less than offer price";
      isValid = false;
    }
  }

  // Max price validation: Only required if Discount Percentage is provided
  if (hasDiscount && !maxDiscountAmount) {
    document.getElementById("maxDiscountAmountError").textContent = "Max Discount Amount is required if Discount Percentage is provided";
    isValid = false;
  }  
  if (hasOfferPrice && (hasDiscount || hasMaxAmount)) {
    if (hasDiscount) {
      document.getElementById("discountPercentageError").textContent = "Leave Discount Percentage empty if using Offer Price";
    }
    if (hasMaxAmount) {
      document.getElementById("maxDiscountAmountError").textContent = "Leave Maximum Amount empty if using Offer Price";
    }
    isValid = false;
  }

  return isValid;
}

    document.querySelectorAll(".edit-Coupon-form").forEach((form) => {
      form.addEventListener("submit", function (event) {
        event.preventDefault();

        if (validateEditCouponForm(this)) {
          const couponId = this.getAttribute("data-id");
          const formData = new FormData(this);

          fetch(`/admin/coupon?id=${couponId}`, {
            method: "PUT",
            body: new URLSearchParams(formData),
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                Swal.fire({
                  title: "Success!",
                  text: "Coupon updated successfully!",
                  icon: "success",
                  confirmButtonText: "Okay",
                }).then(() => {
                  location.reload();
                });
              } else {
                Swal.fire({
                  title: "Error",
                  text: data.message,
                  icon: "error",
                  confirmButtonText: "Okay",
                });
              }
            })
            .catch((error) => {
              console.error("Error updating coupon:", error);
              alert("Error: Could not reach the server.");
            });
        }
      });
    });

    function confirmDelete(couponId) {
      Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!",
      }).then((result) => {
        if (result.isConfirmed) {
          deleteCoupon(couponId);
        }
      });
    }

    function deleteCoupon(couponId) {
      $.ajax({
        url: `/admin/coupon?id=${couponId}`,
        method: "DELETE",
        success: function () {
          Swal.fire({
            icon: "success",
            title: "Deleted!",
            text: "The coupon has been deleted.",
            confirmButtonText: "OK",
          }).then(() => {
            window.location.reload();
          });
        },
        error: function () {
          Swal.fire({
            icon: "error",
            title: "Error!",
            text: "Failed to delete the coupon. Please try again.",
          });
        },
      });
    }

    document.addEventListener("DOMContentLoaded", function () {
      setDefaultStartDate();


      document.querySelectorAll(".edit-Coupon-form").forEach(form => {

        const fields = [
          { id: "couponName", name: "name" },
          { id: "startDate", name: "createdOn" },
          { id: "couponExpireOn", name: "expireOn" },
          { id: "offerPrice", name: "offerPrice" },
          { id: "minimumPrice", name: "minimumPrice" }
        ];

        fields.forEach(field => {
          const input = form.querySelector(`[name="${field.name}"]`);
          if (input && !input.nextElementSibling?.classList?.contains("error-message")) {
            const errorElement = document.createElement("div");
            errorElement.className = "error-message";
            errorElement.style.color = "red";
            errorElement.style.marginTop = "5px";
            input.insertAdjacentElement("afterend", errorElement);
          }
        });
      });
    });
  </script>

  <%- include('../partials/admin/footer') %>